#user  nobody;
worker_processes  1;
worker_cpu_affinity 0001;
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    use epoll;
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    port_in_redirect off;
    server_tokens off;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;
    #设定请求缓冲  
    client_header_buffer_size 32k; 
    sendfile        on;
    client_max_body_size 100m; #缓冲区缓冲用户端请求的最大字节数,可以理解为保存到本地再传给用户
    client_body_buffer_size 512k;
    client_header_timeout 3m;  
    client_body_timeout 3m;  
    tcp_nopush     on;
    tcp_nodelay     on; #防止网络阻塞
    #keepalive_timeout  0;
    keepalive_timeout  65;
    gzip_static on; #启动预压缩功能，对所有类型的文件都有效
    gzip  on;
    gzip_disable "MSIE [1-6]\."; #对于ie有个bug，响应vary头后将不会缓存请求，每次都会重新发新的请求。所以，对于ie 1-6直接禁用gzip。
    gzip_min_length  10k; #最小压缩文件大小
    gzip_buffers     4 16k;#压缩缓冲区
    #gzip_http_version 1.0; #压缩版本（默认1.1，前端如果是squid2.5请使用1.0）
    gzip_comp_level 3; #压缩等级
    gzip_types       text/plain application/x-javascript text/css application/xml; #压缩类型，默认就已经包含text/html，所以下面就不用再写了，写上去也不会有问题，但是会有一个warn。
    gzip_vary on; #开启Http Vary头，vary头主要提供给代理服务器使用，根据Vary头做不同的处理。例如，对于支持gzip的请求反向代理缓存服务器将返回gzip内容，不支持gzip的客户端返回原始内容。
    upstream google {
    	server 172.217.1.196:443 max_fails=3;
        server 172.217.1.206:443 max_fails=3;
        server 216.58.195.132:443 max_fails=3;
    	server 216.58.197.100:443 max_fails=3;
    	server 216.58.221.132:443 max_fails=3;
    }
    #proxy_cache_path cache levels=1:2 keys_zone=one:10m max_size=1g inactive=60m use_temp_path=off;
    server {
        listen       OPENSHIFT_DIY_IP:8080;
        server_name  gpu2.cf;

        location / {
                #proxy_cache cache_one;
                #proxy_cache_valid  200 302 1h;
                #proxy_cache_valid  404 1m;
                proxy_redirect https://www.google.com/ /;
                proxy_cookie_domain google.com gpu2.cf;
                proxy_pass https://google;
                proxy_set_header Host "www.google.com";
                proxy_set_header Accept-Encoding "";
                proxy_set_header User-Agent $http_user_agent;
                proxy_set_header Accept-Language "zh-CN";
                proxy_set_header Cookie "PREF=ID=047808f19f6de346:U=0f62f33dd8549d11:FF=2:LD=zh-CN:NW=1:TM=1325338577:LM=1332142444:GM=1:SG=2:S=rE0SyJh2w1IQ-Maw";
                sub_filter www.google.com gpu2.cf;
                sub_filter_once off;
                add_header X GPU2se-ee;
        }
    }
}
